name: Build & Deploy Wyandotte Robotics (Compose)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      # 1) Checkout & restore Astro cache
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure astro-cache directory
        run: mkdir -p .astro-cache

      - name: Restore Astro Build Cache
        uses: actions/cache@v3
        with:
          path: .astro-cache
          key: astro-cache-${{ hashFiles('src/content/**') }}
          restore-keys: |
            astro-cache-${{ hashFiles('src/content/**') }}

      # 2) Remove any leftover site or imgproxy containers
      - name: Remove stale site & imgproxy containers
        run: |
          docker ps -a --format '{{.Names}}' \
            | grep -E 'imgproxy|wyandotte-robotics' \
            | xargs -r docker rm -f \
          || echo "No stale containers to remove"

      # 3) Stop previous Compose stack (reusing same project name)
      - name: Stop previous stack (if running)
        run: |
          docker compose -f docker-compose.yml \
            --project-name wyandotte-robotics \
            down --remove-orphans || true

      # 4) Pull imgproxy & build + start the stack
      - name: Build & Up via Compose
        run: |
          docker compose -f docker-compose.yml \
            --project-name wyandotte-robotics \
            pull imgproxy

          docker compose -f docker-compose.yml \
            --project-name wyandotte-robotics \
            up -d --build --force-recreate

      # 5) Health‚Äêcheck the site
      - name: Check site health
        run: |
          echo "Waiting for site to respond on port 4321..."
          for i in {1..10}; do
            curl -sf http://localhost:4321/ && exit 0
            sleep 3
          done
          echo "Site did not respond!" && exit 1

      # 6) Prune dangling Docker images
      - name: Docker image prune
        run: docker image prune -f
