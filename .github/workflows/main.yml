name: Build & Deploy Wyandotte Robotics (Compose)

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
    # --------------------------------------------------------
    # 1.  Check out repo & restore Astro cache  (unchanged)
    # --------------------------------------------------------
    - name: Checkout
      uses: actions/checkout@v4

    - name: Ensure astro-cache directory
      run: mkdir -p .astro-cache

    - name: Restore Astro Build Cache
      uses: actions/cache@v3
      with:
        path: .astro-cache
        key: astro-cache-${{ hashFiles('src/content/**') }}
        restore-keys: |
          astro-cache-${{ hashFiles('src/content/**') }}

    # --------------------------------------------------------
    # 2.  Bring down any previous stack for this project name
    # --------------------------------------------------------
    - name: Stop previous stack (if running)
      run: |
        docker compose -f docker-compose.yml \
          --project-name wyandotte-robotics \
          down --remove-orphans || true

    # --------------------------------------------------------
    # 3.  Build & start the stack
    # --------------------------------------------------------
    - name: Build & Up via Compose
      run: |
        # Pull the latest imgproxy image (site builds locally)
        docker compose -f docker-compose.yml \
          --project-name wyandotte-robotics \
          pull imgproxy

        # Build site image + recreate both services
        docker compose -f docker-compose.yml \
          --project-name wyandotte-robotics \
          up -d --build --force-recreate

    # --------------------------------------------------------
    # 4.  Health check (simple)
    # --------------------------------------------------------
    - name: Check site health
      run: |
        echo "Waiting for site to respond..."
        for i in {1..10}; do
          curl -sf http://localhost:4321/ && exit 0
          sleep 3
        done
        echo "Site did not become healthy!" && exit 1

    # --------------------------------------------------------
    # 5.  Clean up dangling images (optional)
    # --------------------------------------------------------
    - name: Docker image prune
      run: docker image prune -f