---
import { getCollection } from 'astro:content';
import { getAlbumImages } from '../../../utils/albums';
import Layout from '~/layouts/PageLayout.astro';
import ImageGallery from '~/components/ImageGallery.astro'; // A client-side hydrated component
import { findImage } from '../../../utils/images';
import type { ImageMetadata } from 'astro';
import Hero from '../../../components/widgets/Hero.astro';

// Define dynamic paths for this route
export async function getStaticPaths() {
  const albums = await getCollection('albums');
  const paths = albums.map((album: { id: string }) => ({
    params: { id: album.id.split('/')[0] },
  }));
  return paths;
}

// Enable prerendering
export const prerender = true;

// Access props passed to the page
const { id } = Astro.params;
const albums = await getCollection('albums');
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const album = albums.find((a: { id: any }) => a.id === id + '/album');

let imagesData = await getAlbumImages(id);
const images: (ImageMetadata | undefined)[] = [];
imagesData.forEach(async (image) => {
  const imageInfo = (await findImage(image)) as ImageMetadata | undefined;
  images.push(imageInfo);
});

const metadata = {
  title: `Wyandotte Robotics - ${album?.data.title || 'Gallery'}`,
  ignoreTitleTemplate: true,
};
---

<Layout metadata={metadata}>
  <Hero>
    <Fragment slot="title">
      {album?.data.title}
    </Fragment>
	<Fragment slot="subtitle">
		{album?.data.subtitle}
	  </Fragment>
  </Hero>
  <div class="flex justify-center my-16 mb-32">
    <ImageGallery images={images} albumTitle={album?.data.title || 'Album'} />
  </div>
</Layout>

<style>
  .loader {
    border-width: 4px;
    border-color: white;
    border-top-color: transparent;
    border-radius: 50%;
    width: 64px;
    height: 64px;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
</style>
